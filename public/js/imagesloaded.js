/*!
 * imagesLoaded v3.0.2
 * JavaScript is all like "You images are done yet or what?"
 */
(function(f){var d=f.jQuery;var c=f.console;var a=typeof c!=="undefined";function g(k,j){for(var l in j){k[l]=j[l]}return k}var i=Object.prototype.toString;function e(j){return i.call(j)==="[object Array]"}function b(m){var l=[];if(e(m)){l=m}else{if(typeof m.length==="number"){for(var k=0,j=m.length;k<j;k++){l.push(m[k])}}else{l.push(m)}}return l}function h(m,k){function l(q,p,o){if(!(this instanceof l)){return new l(q,p)}if(typeof q==="string"){q=document.querySelectorAll(q)}this.elements=b(q);this.options=g({},this.options);if(typeof p==="function"){o=p}else{g(this.options,p)}if(o){this.on("always",o)}this.getImages();if(d){this.jqDeferred=new d.Deferred()}var r=this;setTimeout(function(){r.check()})}l.prototype=new m();l.prototype.options={};l.prototype.getImages=function(){this.images=[];for(var r=0,o=this.elements.length;r<o;r++){var s=this.elements[r];if(s.nodeName==="IMG"){this.addImage(s)}var u=s.querySelectorAll("img");for(var q=0,t=u.length;q<t;q++){var p=u[q];this.addImage(p)}}};l.prototype.addImage=function(o){var p=new n(o);this.images.push(p)};l.prototype.check=function(){var t=this;var p=0;var r=this.images.length;this.hasAnyBroken=false;if(!r){this.complete();return}function q(v,u){if(t.options.debug&&a){c.log("confirm",v,u)}t.progress(v);p++;if(p===r){t.complete()}return true}for(var o=0;o<r;o++){var s=this.images[o];s.on("confirm",q);s.check()}};l.prototype.progress=function(o){this.hasAnyBroken=this.hasAnyBroken||!o.isLoaded;this.emit("progress",this,o);if(this.jqDeferred){this.jqDeferred.notify(this,o)}};l.prototype.complete=function(){var p=this.hasAnyBroken?"fail":"done";this.isComplete=true;this.emit(p,this);this.emit("always",this);if(this.jqDeferred){var o=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[o](this)}};if(d){d.fn.imagesLoaded=function(p,q){var o=new l(this,p,q);return o.jqDeferred.promise(d(this))}}var j={};function n(o){this.img=o}n.prototype=new m();n.prototype.check=function(){var o=j[this.img.src];if(o){this.useCached(o);return}j[this.img.src]=this;if(this.img.complete&&this.img.naturalWidth!==undefined){this.confirm(this.img.naturalWidth!==0,"naturalWidth");return}var p=this.proxyImage=new Image();k.bind(p,"load",this);k.bind(p,"error",this);p.src=this.img.src};n.prototype.useCached=function(o){if(o.isConfirmed){this.confirm(o.isLoaded,"cached was confirmed")}else{var p=this;o.on("confirm",function(q){p.confirm(q.isLoaded,"cache emitted confirmed");return true})}};n.prototype.confirm=function(o,p){this.isConfirmed=true;this.isLoaded=o;this.emit("confirm",this,p)};n.prototype.handleEvent=function(o){var p="on"+o.type;if(this[p]){this[p](o)}};n.prototype.onload=function(){this.confirm(true,"onload");this.unbindProxyEvents()};n.prototype.onerror=function(){this.confirm(false,"onerror");this.unbindProxyEvents()};n.prototype.unbindProxyEvents=function(){k.unbind(this.proxyImage,"load",this);k.unbind(this.proxyImage,"error",this)};return l}if(typeof define==="function"&&define.amd){define(["eventEmitter","eventie"],h)}else{f.imagesLoaded=h(f.EventEmitter,f.eventie)}})(window);